
ID:
null
ExeStack:
[stack=bool a;int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)
bool a]
SymTable
[map=]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)
bool a]
SymTable
[map=]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->false]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->false]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)
int v]
SymTable
[map=a->false]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)
int v]
SymTable
[map=a->false]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->false
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->false
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=(IF(a) THEN (v=2) ELSE (v=3));print(v)
a=true]
SymTable
[map=a->false
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=(IF(a) THEN (v=2) ELSE (v=3));print(v)
a=true]
SymTable
[map=a->false
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=print(v)
(IF(a) THEN (v=2) ELSE (v=3))]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=print(v)
(IF(a) THEN (v=2) ELSE (v=3))]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=print(v)
v=2]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=print(v)
v=2]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=print(v)]
SymTable
[map=a->true
v->2]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=print(v)]
SymTable
[map=a->true
v->2]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
null
ExeStack:
[stack=]
SymTable
[map=a->true
v->2]
Out
[[2]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=bool a;int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)
bool a]
SymTable
[map=]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)
bool a]
SymTable
[map=]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->false]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=int v;a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->false]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)
int v]
SymTable
[map=a->false]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)
int v]
SymTable
[map=a->false]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->false
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=a=true;(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->false
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=(IF(a) THEN (v=2) ELSE (v=3));print(v)
a=true]
SymTable
[map=a->false
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=(IF(a) THEN (v=2) ELSE (v=3));print(v)
a=true]
SymTable
[map=a->false
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=(IF(a) THEN (v=2) ELSE (v=3));print(v)]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=print(v)
(IF(a) THEN (v=2) ELSE (v=3))]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=print(v)
(IF(a) THEN (v=2) ELSE (v=3))]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=print(v)
v=2]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=print(v)
v=2]
SymTable
[map=a->true
v->0]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=print(v)]
SymTable
[map=a->true
v->2]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=print(v)]
SymTable
[map=a->true
v->2]
Out
[[]]
FileTable
file=
HeapTable
[]

ID:
1
ExeStack:
[stack=]
SymTable
[map=a->true
v->2]
Out
[[2]]
FileTable
file=
HeapTable
[]
